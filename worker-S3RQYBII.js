addEventListener("message",async({data:a})=>{if(a.type=="UrlToBolbUrl"){let i=await m(a.data);if(i){let s=URL.createObjectURL(i);postMessage({id:a.id,type:a.type,data:s})}else postMessage({id:a.id,type:"load_image",data:a.data})}if(a.type=="UrlToBase64Url",a.type=="compress_multiple"){let i=a.data;if(i){for(let s=0;s<i.length;s++)await w(i[s],a.width,a.quality);postMessage({type:"destroy"})}else postMessage({type:"destroy"})}if(a.type=="compress_multiple2"){let i=a.data;i?(await p(i,a.quality),postMessage({type:"destroy"})):postMessage({type:"destroy"})}});var c,l=async()=>{c=await caches.open("image"),postMessage({type:"init"})};l();var m=async a=>{let i=await c.match(a);if(i){let s=await i.blob();return s.size<1e3?null:s}else return null};async function w(a,i,s){if(await caches.match(`${a}?width=${i}&quality=${s}`))return;let h=await caches.match(a);if(!h)return;let g=await h.blob(),e=await createImageBitmap(g),t=new OffscreenCanvas(e.width,e.height);t.width=e.width,t.height=e.height,t.width>t.height?(t.width=i*2,t.height=i*2*(e.height/e.width)):(t.width=i,t.height=i*(e.height/e.width));let n=t.getContext("2d");n.rect(0,0,t.width,t.height),n.drawImage(e,0,0,t.width,t.height);let r=await t.convertToBlob({type:"image/webp",quality:s});await c.put(`${a}?width=${i}&quality=${s}`,new Response(r))}async function p(a,i){let s=async g=>{let t=await(await caches.match(g)).blob();return await createImageBitmap(t)};for(let g=0;g<a.length;g++){let e=a[g],t=new OffscreenCanvas(e.page.width,e.page.height);t.width=e.page.width,t.height=e.page.height;let n=t.getContext("2d");if(n.rect(0,0,t.width,t.height),n.fillStyle="rgb(255,255,255)",n.fillRect(0,0,t.width,t.height),e.images.length==1){var o=await s(e.images[0].img);n.drawImage(o,e.images[0].x,e.images[0].y,e.images[0].width,e.images[0].height)}else if(e.images.length==2){var o=await s(e.images[0].img),h=await s(e.images[1].img);n.drawImage(o,e.images[0].x,e.images[0].y,e.images[0].width,e.images[0].height),n.drawImage(h,e.images[1].x,e.images[1].y,e.images[1].width,e.images[1].height)}let r=await t.convertToBlob({type:"image/webp",quality:i});await c.put(`http://localhost:7700/download/${e.md5}`,new Response(r))}}
